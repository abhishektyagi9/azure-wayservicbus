trigger: none

pool: Default

variables:
  buildConfiguration: 'Release'
  functionAppName: '#FUNCTION_NAME#'
  azureSubscription: '#SERIVCE_CONNECTION_NAME#'
  apimResourceGroup: '#APIM_RG#'
  apimName: '#APIM_NAME#'
  apimServiceName: '#APIM_SERVICE_NAME#'
  apimPath: '#APIM_SERVICE_PATH'
  specificationUrl: '#FUNCTION_URL#/api/swagger.json'
  serviceUrl: '#FUNCTION_URL#/api'
  specificationFormat: 'OpenApiJson'  
  productName: SampleFunctionApiProduct
  productNameId: SampleFunctionApiProduct
  projectPath: "**/SampleFunction/**/*.csproj"
stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build function
        steps:
          - task: UseDotNet@2
            inputs:
              version: '7.x'        
          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: 'restore'
              projects: '**/*.csproj'
          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: 'build'
              projects: '$(projectPath)'
              arguments: --configuration $(buildConfiguration)
          - task: DotNetCoreCLI@2
            displayName: Publish
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: '$(projectPath)'
              arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
              zipAfterPublish: True
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
  - stage: Deploy
    displayName: 'Deploy function'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy function
        environment: Azureway
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureFunctionApp@1
                  displayName: 'Deploy Azure Function'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    appType: functionAppLinux
                    appName: $(functionAppName)       
                    runtimeStack: 'DOTNET-ISOLATED|7.0'            
                    package: '$(Pipeline.Workspace)/drop/SampleFunction.zip'
                    deploymentMethod: 'zipDeploy'
      - job: UpdateApim
        dependsOn: Deploy
        displayName: Update Application Management definition
        steps:
        - script: sleep 180s
        - task: AzureCLI@2
          displayName: Import API to APIM
          inputs:
            azureSubscription: '$(azureSubscription)'
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              currentApiRevision=$(az apim api revision list --resource-group $APIMRESOURCEGROUP --service-name $APIMNAME --api-id $APIMSERVICENAME | jq '.[0].apiRevision' ) 
              parsedApiRevision=$(echo $currentApiRevision | tr -d '"')
              nextApiRevision=$(($parsedApiRevision + 1))
              echo $nextApiRevision
          
              az apim product create --resource-group $APIMRESOURCEGROUP  --service-name $APIMNAME --product-id $PRODUCTNAMEID --product-name $PRODUCTNAME --subscription-required true --approval-required false --state "published"
              az apim product api add --resource-group $APIMRESOURCEGROUP --service-name $APIMNAME --product-id $PRODUCTNAMEID --api-id $APIMSERVICENAME
              az apim api import -g $APIMRESOURCEGROUP --service-name $APIMNAME --path $APIMPATH --service-url $SERVICEURL --specification-url $SPECIFICATIONURL --specification-format $SPECIFICATIONFORMAT --api-type http --api-revision $nextApiRevision  --api-id $APIMSERVICENAME --subscription-required false
              az apim api release create --resource-group $APIMRESOURCEGROUP --service-name $APIMNAME --api-id $APIMSERVICENAME --release-id MyRelease_$nextApiRevision --api-revision $nextApiRevision
